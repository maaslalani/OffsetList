{"version":3,"sources":["data/companies.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["COMPANIES","name","color","url","sort","Math","random","suggestCompany","i","length","splice","CompanyCard","_ref","react_default","a","createElement","index_esm","key","floor","className","target","rel","href","textAlign","py","sx","borderRadius","bg","fontSize","Home","minWidth","px","flexDirection","alignItems","justifyContent","width","variant","mt","height","style","outline","src","alt","camera-controls","auto-rotate","auto-rotate-delay","interaction-prompt-threshold","interaction-policy","background-color","display","gridGap","gridTemplateColumns","map","pb","role","aria-label","theme","Object","objectSpread","preset","App","emotion_theming_browser_esm","react_router_dom","react_router","path","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7788ae6c.chunk.js","sourcesContent":["const COMPANIES = [\n  {\n    name:'Shopify',\n    color:'#50B83C',\n    url:'https://www.shopify.ca/about/environment',\n  },\n  {\n    name:'Microsoft',\n    color:'#F25022',\n    url:'https://blogs.microsoft.com/blog/2020/01/16/microsoft-will-be-carbon-negative-by-2030/'\n  },\n  {\n    name:'Google',\n    color:'#4285F4',\n    url:'https://sustainability.google/environment/'\n  },\n  {\n    name:'Stripe',\n    color:'#008CDD',\n    url:'https://stripe.com/en-ca/environment'\n  },\n  {\n    name:'Facebook',\n    color:'#4267B2',\n    url:'https://sustainability.fb.com/sustainability-in-numbers/'\n  },\n  {\n    name:'Apple',\n    color:'#555555',\n    url:'https://www.apple.com/environment/our-approach/'\n  },\n  {\n    name:'Adobe',\n    color:'#FF0000',\n    url:'https://www.adobe.com/corporate-responsibility/sustainability/energy-conservation.html'\n  },\n  {\n    name:'Amazon',\n    color:'#FF9900',\n    url:'https://blog.aboutamazon.com/sustainability/the-climate-pledge'\n  },\n  {\n    name:'Accenture',\n    color:'#0089FF',\n    url:'https://www.accenture.com/us-en/about/corporate-citizenship/advancing-sustainability'\n  },\n  {\n    name:'Atlassian',\n    color:'#172B4D',\n    url:'https://www.atlassian.com/blog/announcements/atlassian-commits-to-the-fight-against-global-climate-change'\n  },\n  {\n    name:'Autodesk',\n    color:'#0696D7',\n    url:'https://www.autodesk.com/sustainability/business-operations'\n  },\n  {\n    name:'HP',\n    color:'#0096D6',\n    url:'https://www8.hp.com/us/en/hp-information/environment/footprint.html'\n  },\n  {\n    name:'Lyft',\n    color:'#FF00BF',\n    url:'https://blog.lyft.com/posts/lyft-commits-to-full-carbon-neutrality-and-100-renewable-energy'\n  },\n  {\n    name:'Salesforce',\n    color:'#009EDB',\n    url:'https://www.salesforce.com/name/news-press/press-releases/2019/09/191809-gl/'\n  },\n  {\n    name:'VMware',\n    color:'#717074',\n    url:'https://www.vmware.com/radius/achieving-carbon-neutrality/'\n  },\n  {\n    name:'Workday',\n    color:'#E28225',\n    url:'https://www.workday.com/en-us/name/about-workday/sustainability.html'\n  },\n  {\n    name:'LinkedIn',\n    color:'#2867B2',\n    url:'https://socialimpact.linkedin.com/environmental-sustainability'\n  },\n  {\n    name:'Uber',\n    color:'#000000',\n    url:'https://www.uber.com/us/en/community/supporting-cities/sustainability/'\n  },\n  {\n    name:'Cisco',\n    color:'#049FD9',\n    url:'https://www.cisco.com/c/en/us/about/csr/impact/environmental-sustainability.html'\n  },\n  {\n    name:'Samsara',\n    color:'#0A253E',\n    url:'https://www.samsara.com/blog/sustainability'\n  },\n  {\n    name:'Lending Loop',\n    color:'#45295d',\n    url:'https://www.lendingloop.ca/environment',\n  },\n].sort(() => Math.random() - 0.5)\n\nconst suggestCompany = {\n  name: 'Suggest a company',\n  color:'#000',\n  url: 'https://airtable.com/shrSJYJXfYpyBar5E',\n}\n\nconst suggestFrequency = 7\n\nfor (let i = suggestFrequency; i < COMPANIES.length; i += suggestFrequency) {\n  COMPANIES.splice(i, 0, suggestCompany)\n}\n\nexport default COMPANIES\n","import React from 'react';\nimport {\n  Text,\n  Heading,\n  Box,\n  Flex,\n  Link,\n} from 'rebass';\nimport COMPANIES from '../data/companies';\n\nfunction CompanyCard({name, color, url}) {\n  return (\n    <Link key={name + color + Math.floor(Math.random() * 100)} className=\"card\" target=\"_blank\" rel=\"noopener noreferrer\" href={url} >\n      <Box textAlign=\"center\" py={5} sx={{ borderRadius: 5 }} color=\"white\" bg={color}>\n        <Text fontSize={4}>\n          {name}\n        </Text>\n      </Box>\n    </Link>\n  );\n}\n\nfunction Home() {\n  return (\n    <Box\n      color=\"white\"\n      bg=\"black\"\n      minWidth={300}\n      px={[4, 4, 6]}\n      py={5}\n    >\n      <Flex\n        flexDirection={[\"column-reverse\", \"row\"]}\n        alignItems=\"center\"\n        justifyContent=\"space-around\"\n        py={[2, 4, 6]}\n      >\n        <Box width={[1, 1/2]} textAlign={[\"center\", \"left\"]}>\n          <Heading variant='display'>\n            Offset List\n          </Heading>\n          <Text mt={3} fontSize={24}>\n            Companies that have committed to offsetting their carbon emissions\n          </Text>\n        </Box>\n        <Box width={[1, 1/2, 1/2]} height={450} textAlign=\"center\">\n          <model-viewer\n            style={{width: \"100%\", height: \"450px\", outline: \"none\"}}\n            src=\"earth.glb\"\n            alt=\"3D model of the earth\"\n            camera-controls\n            auto-rotate\n            auto-rotate-delay={100}\n            interaction-prompt-threshold={20000}\n            interaction-policy=\"allow-when-focused\"\n            background-color=\"black\">\n          </model-viewer>\n        </Box>\n      </Flex>\n      <Box\n        py={6}\n        display=\"grid\"\n        sx={{\n        gridGap: 4,\n        gridTemplateColumns: 'repeat(auto-fit, minmax(270px, 1fr))'\n        }}\n      >\n        {COMPANIES.map(CompanyCard)}\n      </Box>\n      <Box pb={5} textAlign=\"center\">\n        <code>\n          Made with <span role=\"img\" aria-label=\"tree\">üå≥</span> by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/maaslalani\">Maas</a> and <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/gonenadam\">Adam</a>. </code>\n          <code><span role=\"img\" aria-label=\"earth\">üåç</span> from <a href=\"https://poly.google.com/view/88CP80Kgb-u\">Poly</a></code>\n        </Box>\n      </Box>\n  );\n}\n\nexport default Home;\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport Home from './components/Home'\nimport { ThemeProvider } from 'emotion-theming'\nimport { preset } from '@rebass/preset'\nimport './App.css'\n\nconst theme = {\n  ...preset,\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}